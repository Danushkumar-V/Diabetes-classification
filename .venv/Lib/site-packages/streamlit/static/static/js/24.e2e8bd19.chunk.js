/*! For license information please see 24.e2e8bd19.chunk.js.LICENSE.txt */
(this["webpackJsonpstreamlit-browser"]=this["webpackJsonpstreamlit-browser"]||[]).push([[24],{5143:function(t,e,a){"use strict";a.r(e),a.d(e,"default",(function(){return x}));var n=a(0),i=a(25),s=a(12),r=a(27),o=a(163),h=a(98),d=a(2859),c=a.n(d),l=a(2770),u=a(7);const g=a.n(u)()("div",{target:"everg990"})((({theme:t})=>({"&.vega-embed":{".vega-actions":{zIndex:t.zIndices.popupMenu},summary:{height:"auto",zIndex:t.zIndices.menuButton}}})),"");var f=a(5);const p="(index)",w="source",m=new Set([h.a.DatetimeIndex,h.a.Float64Index,h.a.Int64Index,h.a.RangeIndex,h.a.UInt64Index]);class b extends n.PureComponent{constructor(...t){super(...t),this.vegaView=void 0,this.vegaFinalizer=void 0,this.defaultDataName=w,this.element=null,this.state={error:void 0},this.finalizeView=()=>{this.vegaFinalizer&&this.vegaFinalizer(),this.vegaFinalizer=void 0,this.vegaView=void 0},this.generateSpec=()=>{const{element:t,theme:e}=this.props,a=JSON.parse(t.spec),{useContainerWidth:n}=t;if(a.config=function(t,e){const{colors:a,fontSizes:n,genericFonts:i}=e,s={labelFont:i.bodyFont,titleFont:i.bodyFont,labelFontSize:n.twoSmPx,titleFontSize:n.twoSmPx},o={background:a.bgColor,axis:{labelColor:a.bodyText,titleColor:a.bodyText,gridColor:a.fadedText10,...s},legend:{labelColor:a.bodyText,titleColor:a.bodyText,...s},title:{color:a.bodyText,subtitleColor:a.bodyText,...s}};if(!t)return o;return Object(r.merge)({},o,t||{})}(a.config,e),this.props.height?(a.width=this.props.width-38,a.height=this.props.height):n&&(a.width=this.props.width-38),a.padding||(a.padding={}),null==a.padding.bottom&&(a.padding.bottom=20),a.datasets)throw new Error("Datasets should not be passed as part of the spec");return a}}async componentDidMount(){try{await this.createView()}catch(t){this.setState({error:t})}}componentWillUnmount(){this.finalizeView()}async componentDidUpdate(t){const{element:e,theme:a}=t,{element:n,theme:i}=this.props,r=e.spec,{spec:o}=n;if(!this.vegaView||r!==o||a!==i||t.width!==this.props.width||t.height!==this.props.height){Object(s.c)("Vega spec changed.");try{await this.createView()}catch(u){this.setState({error:u})}return}const h=e.data,{data:d}=n;(h||d)&&this.updateData(this.defaultDataName,h,d);const c=v(e)||{},l=v(n)||{};for(const[s,g]of Object.entries(l)){const t=s||this.defaultDataName,e=c[t];this.updateData(t,e,g)}for(const s of Object.keys(c))l.hasOwnProperty(s)||s===this.defaultDataName||this.updateData(s,null,null);this.vegaView.resize().runAsync()}updateData(t,e,a){if(!this.vegaView)throw new Error("Chart has not been drawn yet");if(!a||0===a.data.length){return void(this.vegaView._runtime.data.hasOwnProperty(t)&&this.vegaView.remove(t,l.truthy))}if(!e||0===e.data.length)return void this.vegaView.insert(t,y(a));const[n,i]=e.data.length>0?[e.data.length,e.data[0].length]:[0,0],[o,h]=a.data.length>0?[a.data.length,a.data[0].length]:[0,0];if(function(t,e,a,n,i,s){if(a!==s)return!1;if(e>i)return!1;if(0===e)return!1;const o=t.data,h=n.data,d=s-1,c=e-1;if(Object(r.get)(o,[d,0])!==Object(r.get)(h,[d,0])||Object(r.get)(o,[d,c])!==Object(r.get)(h,[d,c]))return!1;return!0}(e,n,i,a,o,h))n<o&&this.vegaView.insert(t,y(a,n));else{const e=l.changeset().remove(l.truthy).insert(y(a));this.vegaView.change(t,e),Object(s.c)("Had to clear the ".concat(t," dataset before inserting data through Vega view."))}}async createView(){if(Object(s.c)("Creating a new Vega view."),!this.element)throw Error("Element missing.");this.finalizeView();const t=this.props.element,e=this.generateSpec(),{vgSpec:a,view:n,finalize:i}=await c()(this.element,e);this.vegaView=n,this.vegaFinalizer=i;const r=function(t){const e=v(t);if(null==e)return null;const a={};for(const[n,i]of Object.entries(e))a[n]=y(i);return a}(t),o=r?Object.keys(r):[];if(1===o.length){const[t]=o;this.defaultDataName=t}else 0===o.length&&a.data&&(this.defaultDataName=w);const h=function(t){const e=t.data;if(!e||0===e.data.length)return null;return y(e)}(t);if(h&&n.insert(this.defaultDataName,h),r)for(const[s,d]of Object.entries(r))n.insert(s,d);await n.runAsync(),this.vegaView.resize().runAsync()}render(){if(this.state.error)throw this.state.error;return Object(f.jsx)(g,{"data-testid":"stArrowVegaLiteChart",ref:t=>{this.element=t}})}}function v(t){var e;if(0===(null===(e=t.datasets)||void 0===e?void 0:e.length))return null;const a={};return t.datasets.forEach((t=>{if(!t)return;const e=t.hasName?t.name:null;a[e]=t.data})),a}function y(t,e=0){if(0===t.index.length||0===t.data.length||0===t.columns.length)return[];const a=[],n=t.data.length,i=t.data[0].length,s=h.b.getTypeName(t.types.index[0]),r=m.has(s);for(let o=e;o<n;o++){const e={};r&&(e[p]=t.index[o][0]);for(let a=0;a<i;a++)e[t.columns[0][a]]=t.data[o][a];a.push(e)}return a}var x=Object(i.withTheme)(Object(o.a)(b))}}]);